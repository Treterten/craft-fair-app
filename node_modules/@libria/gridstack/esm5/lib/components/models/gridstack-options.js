/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/models/gridstack-options.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function GridstackOptions() { }
if (false) {
    /** @type {?|undefined} */
    GridstackOptions.prototype.acceptWidgets;
    /**
     * if true the resizing handles are shown even if the user is not hovering over the widget (default: false)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.alwaysShowResizeHandle;
    /**
     * turns animation on (default: true)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.animate;
    /**
     * if false gridstack will not initialize existing items (default: true)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.auto;
    /**
     *  one cell height (default: 60)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.cellHeight;
    /**
     * class that implement drag'n'drop functionallity for gridstack.
     * If false grid will be static. (default: null - first available plugin will be used)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.ddPlugin;
    /**
     * disallows dragging of widgets (default: false).
     * @type {?|undefined}
     */
    GridstackOptions.prototype.disableDrag;
    /**
     * disallows resizing of widgets (default: false).
     * @type {?|undefined}
     */
    GridstackOptions.prototype.disableResize;
    /**
     * allows to override jQuery UI draggable options. (default: { handle: '.grid-stack-item-content', scroll: true, appendTo: 'body' })
     * @type {?|undefined}
     */
    GridstackOptions.prototype.draggable;
    /**
     * draggable handle selector (default: '.grid-stack-item-content')
     * @type {?|undefined}
     */
    GridstackOptions.prototype.handle;
    /**
     * draggable handle class (e.g. 'grid-stack-item-content'). If set handle is ignored (default: null)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.handleClass;
    /**
     * maximum rows amount.Default is 0 which means no maximum rows
     * @type {?|undefined}
     */
    GridstackOptions.prototype.height;
    /**
     * enable floating widgets (default: false) See example
     * @type {?|undefined}
     */
    GridstackOptions.prototype.float;
    /**
     * widget class (default: 'grid-stack-item')
     * @type {?|undefined}
     */
    GridstackOptions.prototype.itemClass;
    /**
     * minimal width.If window width is less, grid will be shown in one - column mode (default: 768)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.minWidth;
    /**
     * disables the onColumnMode when the window width is less than minWidth (default: 'false')
     * @type {?|undefined}
     */
    GridstackOptions.prototype.disableOneColumnMode;
    /**
     * class set on grid when in one column mode (default: 'grid-stack-one-column-mode')
     * @type {?|undefined}
     */
    GridstackOptions.prototype.oneColumnModeClass;
    /**
     * class for placeholder (default: 'grid-stack-placeholder')
     * @type {?|undefined}
     */
    GridstackOptions.prototype.placeholderClass;
    /**
     * placeholder default content (default: '')
     * @type {?|undefined}
     */
    GridstackOptions.prototype.placeholderText;
    /**
     * allows to override jQuery UI resizable options. (default: { autoHide: true, handles: 'se' })
     * @type {?|undefined}
     */
    GridstackOptions.prototype.resizable;
    /**
     * if true widgets could be removed by dragging outside of the grid. It could also be a jQuery selector string,
     * @type {?|undefined}
     */
    GridstackOptions.prototype.removable;
    /**
     * time in milliseconds before widget is being removed while dragging outside of the grid. (default: 2000)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.removeTimeout;
    /**
     *  if true turns grid to RTL. Possible values are true, false, 'auto' (default: 'auto')
     * @type {?|undefined}
     */
    GridstackOptions.prototype.rtl;
    /**
     * makes grid static (default false).If true widgets are not movable/ resizable.You don't even need jQueryUI draggable/resizable.
     * A CSS class grid-stack-static is also added to the container.
     * @type {?|undefined}
     */
    GridstackOptions.prototype.staticGrid;
    /**
     * vertical gap size (default: 20)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.verticalMargin;
    /**
     * amount of columns (default: 12)
     * @type {?|undefined}
     */
    GridstackOptions.prototype.width;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZHN0YWNrLW9wdGlvbnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbGlicmlhL2dyaWRzdGFjay8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL21vZGVscy9ncmlkc3RhY2stb3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNDQXdHQzs7O0lBdkdHLHlDQUF1Qjs7Ozs7SUFJdkIsa0RBQWlDOzs7OztJQUlqQyxtQ0FBa0I7Ozs7O0lBSWxCLGdDQUFlOzs7OztJQUlmLHNDQUE2Qjs7Ozs7O0lBSzdCLG9DQUFlOzs7OztJQUlmLHVDQUFzQjs7Ozs7SUFJdEIseUNBQXdCOzs7OztJQUl4QixxQ0FBZTs7Ozs7SUFJZixrQ0FBZ0I7Ozs7O0lBSWhCLHVDQUFxQjs7Ozs7SUFJckIsa0NBQWdCOzs7OztJQUloQixpQ0FBZ0I7Ozs7O0lBSWhCLHFDQUFtQjs7Ozs7SUFJbkIsb0NBQWtCOzs7OztJQUlsQixnREFBK0I7Ozs7O0lBSS9CLDhDQUE0Qjs7Ozs7SUFJNUIsNENBQTBCOzs7OztJQUkxQiwyQ0FBeUI7Ozs7O0lBSXpCLHFDQUFlOzs7OztJQUlmLHFDQUE2Qjs7Ozs7SUFJN0IseUNBQXVCOzs7OztJQUl2QiwrQkFBdUI7Ozs7OztJQUt2QixzQ0FBcUI7Ozs7O0lBSXJCLDBDQUF3Qjs7Ozs7SUFJeEIsaUNBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIEdyaWRzdGFja09wdGlvbnMge1xyXG4gICAgYWNjZXB0V2lkZ2V0cz86IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogaWYgdHJ1ZSB0aGUgcmVzaXppbmcgaGFuZGxlcyBhcmUgc2hvd24gZXZlbiBpZiB0aGUgdXNlciBpcyBub3QgaG92ZXJpbmcgb3ZlciB0aGUgd2lkZ2V0IChkZWZhdWx0OiBmYWxzZSlcclxuICAgICAqL1xyXG4gICAgYWx3YXlzU2hvd1Jlc2l6ZUhhbmRsZT86IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIHR1cm5zIGFuaW1hdGlvbiBvbiAoZGVmYXVsdDogdHJ1ZSlcclxuICAgICAqL1xyXG4gICAgYW5pbWF0ZT86IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIGlmIGZhbHNlIGdyaWRzdGFjayB3aWxsIG5vdCBpbml0aWFsaXplIGV4aXN0aW5nIGl0ZW1zIChkZWZhdWx0OiB0cnVlKVxyXG4gICAgICovXHJcbiAgICBhdXRvPzogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogIG9uZSBjZWxsIGhlaWdodCAoZGVmYXVsdDogNjApXHJcbiAgICAgKi9cclxuICAgIGNlbGxIZWlnaHQ/OiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIGNsYXNzIHRoYXQgaW1wbGVtZW50IGRyYWcnbidkcm9wIGZ1bmN0aW9uYWxsaXR5IGZvciBncmlkc3RhY2suXHJcbiAgICAgKiBJZiBmYWxzZSBncmlkIHdpbGwgYmUgc3RhdGljLiAoZGVmYXVsdDogbnVsbCAtIGZpcnN0IGF2YWlsYWJsZSBwbHVnaW4gd2lsbCBiZSB1c2VkKVxyXG4gICAgICovXHJcbiAgICBkZFBsdWdpbj86IGFueTtcclxuICAgIC8qKlxyXG4gICAgICogZGlzYWxsb3dzIGRyYWdnaW5nIG9mIHdpZGdldHMgKGRlZmF1bHQ6IGZhbHNlKS5cclxuICAgICAqL1xyXG4gICAgZGlzYWJsZURyYWc/OiBib29sZWFuO1xyXG4gICAgLyoqXHJcbiAgICAgKiBkaXNhbGxvd3MgcmVzaXppbmcgb2Ygd2lkZ2V0cyAoZGVmYXVsdDogZmFsc2UpLlxyXG4gICAgICovXHJcbiAgICBkaXNhYmxlUmVzaXplPzogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICogYWxsb3dzIHRvIG92ZXJyaWRlIGpRdWVyeSBVSSBkcmFnZ2FibGUgb3B0aW9ucy4gKGRlZmF1bHQ6IHsgaGFuZGxlOiAnLmdyaWQtc3RhY2staXRlbS1jb250ZW50Jywgc2Nyb2xsOiB0cnVlLCBhcHBlbmRUbzogJ2JvZHknIH0pXHJcbiAgICAgKi9cclxuICAgIGRyYWdnYWJsZT86IHt9O1xyXG4gICAgLyoqXHJcbiAgICAqIGRyYWdnYWJsZSBoYW5kbGUgc2VsZWN0b3IgKGRlZmF1bHQ6ICcuZ3JpZC1zdGFjay1pdGVtLWNvbnRlbnQnKVxyXG4gICAgKi9cclxuICAgIGhhbmRsZT86IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogZHJhZ2dhYmxlIGhhbmRsZSBjbGFzcyAoZS5nLiAnZ3JpZC1zdGFjay1pdGVtLWNvbnRlbnQnKS4gSWYgc2V0IGhhbmRsZSBpcyBpZ25vcmVkIChkZWZhdWx0OiBudWxsKVxyXG4gICAgICovXHJcbiAgICBoYW5kbGVDbGFzcz86IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgKiBtYXhpbXVtIHJvd3MgYW1vdW50LkRlZmF1bHQgaXMgMCB3aGljaCBtZWFucyBubyBtYXhpbXVtIHJvd3NcclxuICAgICovXHJcbiAgICBoZWlnaHQ/OiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICogZW5hYmxlIGZsb2F0aW5nIHdpZGdldHMgKGRlZmF1bHQ6IGZhbHNlKSBTZWUgZXhhbXBsZVxyXG4gICAgKi9cclxuICAgIGZsb2F0PzogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgKiB3aWRnZXQgY2xhc3MgKGRlZmF1bHQ6ICdncmlkLXN0YWNrLWl0ZW0nKVxyXG4gICAgKi9cclxuICAgIGl0ZW1DbGFzcz86IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgKiBtaW5pbWFsIHdpZHRoLklmIHdpbmRvdyB3aWR0aCBpcyBsZXNzLCBncmlkIHdpbGwgYmUgc2hvd24gaW4gb25lIC0gY29sdW1uIG1vZGUgKGRlZmF1bHQ6IDc2OClcclxuICAgICovXHJcbiAgICBtaW5XaWR0aD86IG51bWJlcjtcclxuICAgIC8qKlxyXG4gICAgICogZGlzYWJsZXMgdGhlIG9uQ29sdW1uTW9kZSB3aGVuIHRoZSB3aW5kb3cgd2lkdGggaXMgbGVzcyB0aGFuIG1pbldpZHRoIChkZWZhdWx0OiAnZmFsc2UnKVxyXG4gICAgICovXHJcbiAgICBkaXNhYmxlT25lQ29sdW1uTW9kZT86IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIGNsYXNzIHNldCBvbiBncmlkIHdoZW4gaW4gb25lIGNvbHVtbiBtb2RlIChkZWZhdWx0OiAnZ3JpZC1zdGFjay1vbmUtY29sdW1uLW1vZGUnKVxyXG4gICAgICovXHJcbiAgICBvbmVDb2x1bW5Nb2RlQ2xhc3M/OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICogY2xhc3MgZm9yIHBsYWNlaG9sZGVyIChkZWZhdWx0OiAnZ3JpZC1zdGFjay1wbGFjZWhvbGRlcicpXHJcbiAgICAqL1xyXG4gICAgcGxhY2Vob2xkZXJDbGFzcz86IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogcGxhY2Vob2xkZXIgZGVmYXVsdCBjb250ZW50IChkZWZhdWx0OiAnJylcclxuICAgICAqL1xyXG4gICAgcGxhY2Vob2xkZXJUZXh0Pzogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAqIGFsbG93cyB0byBvdmVycmlkZSBqUXVlcnkgVUkgcmVzaXphYmxlIG9wdGlvbnMuIChkZWZhdWx0OiB7IGF1dG9IaWRlOiB0cnVlLCBoYW5kbGVzOiAnc2UnIH0pXHJcbiAgICAqL1xyXG4gICAgcmVzaXphYmxlPzoge307XHJcbiAgICAvKipcclxuICAgICAqIGlmIHRydWUgd2lkZ2V0cyBjb3VsZCBiZSByZW1vdmVkIGJ5IGRyYWdnaW5nIG91dHNpZGUgb2YgdGhlIGdyaWQuIEl0IGNvdWxkIGFsc28gYmUgYSBqUXVlcnkgc2VsZWN0b3Igc3RyaW5nLFxyXG4gICAgICovXHJcbiAgICByZW1vdmFibGU/OiBib29sZWFuIHwgc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiB0aW1lIGluIG1pbGxpc2Vjb25kcyBiZWZvcmUgd2lkZ2V0IGlzIGJlaW5nIHJlbW92ZWQgd2hpbGUgZHJhZ2dpbmcgb3V0c2lkZSBvZiB0aGUgZ3JpZC4gKGRlZmF1bHQ6IDIwMDApXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZVRpbWVvdXQ/OiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqICBpZiB0cnVlIHR1cm5zIGdyaWQgdG8gUlRMLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIHRydWUsIGZhbHNlLCAnYXV0bycgKGRlZmF1bHQ6ICdhdXRvJylcclxuICAgICAqL1xyXG4gICAgcnRsPzogYm9vbGVhbiB8ICdhdXRvJztcclxuICAgIC8qKlxyXG4gICAgKiBtYWtlcyBncmlkIHN0YXRpYyAoZGVmYXVsdCBmYWxzZSkuSWYgdHJ1ZSB3aWRnZXRzIGFyZSBub3QgbW92YWJsZS8gcmVzaXphYmxlLllvdSBkb24ndCBldmVuIG5lZWQgalF1ZXJ5VUkgZHJhZ2dhYmxlL3Jlc2l6YWJsZS5cclxuICAgICogQSBDU1MgY2xhc3MgZ3JpZC1zdGFjay1zdGF0aWMgaXMgYWxzbyBhZGRlZCB0byB0aGUgY29udGFpbmVyLlxyXG4gICAgKi9cclxuICAgIHN0YXRpY0dyaWQ/OiBib29sZWFuO1xyXG4gICAgLyoqXHJcbiAgICAqIHZlcnRpY2FsIGdhcCBzaXplIChkZWZhdWx0OiAyMClcclxuICAgICovXHJcbiAgICB2ZXJ0aWNhbE1hcmdpbj86IG51bWJlcjtcclxuICAgIC8qKlxyXG4gICAgKiBhbW91bnQgb2YgY29sdW1ucyAoZGVmYXVsdDogMTIpXHJcbiAgICAqL1xyXG4gICAgd2lkdGg/OiBudW1iZXI7XHJcbn1cclxuIl19